name: Update AUR Package

on:
  schedule:
    - cron: '0 0 * * *' # Täglich um Mitternacht prüfen
  workflow_dispatch:

jobs:
  update-pkgbuild:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0  # Vollständige Historie klonen

      - name: Get Latest Release via API
        id: get_release
        run: |
          latest_release=$(curl -s https://api.github.com/repos/C0D3D3V/Moodle-DL/releases/latest | jq -r .tag_name)
          echo "Latest release is $latest_release"
          echo "release_tag=$latest_release" >> $GITHUB_ENV

      - name: Run in Arch Linux Docker Container
        run: |
          docker run --rm \
            -v "${{ github.workspace }}:/workspace" \
            -w /workspace \
            archlinux:base sh -c "
            pacman -Sy --noconfirm base-devel git jq pacman-contrib &&
            useradd -m builder &&
            chown -R builder:builder /workspace &&
            su builder -c '
              release_tag=${{ env.release_tag }} &&
              sed -i \"s/pkgver=.*/pkgver=\${release_tag#v}/\" PKGBUILD &&
              updpkgsums &&
              makepkg --printsrcinfo > .SRCINFO
            ' &&
            chown -R $(id -u):$(id -g) /workspace
          "

      - name: Commit and Push
        env:
          SSH_PRIVATE_KEY: ${{ secrets.AUR_SSH_KEY }}
        run: |
          mkdir -p ~/.ssh
          echo "$SSH_PRIVATE_KEY" > ~/.ssh/id_ed25519
          chmod 600 ~/.ssh/id_ed25519
          ssh-keyscan aur.archlinux.org >> ~/.ssh/known_hosts

          git config --global user.name "Max Ebert"
          git config --global user.email "Pesticide3902@proton.me"

          # Ensure the remote is set
          git remote add aur ssh://aur@aur.archlinux.org/moodle-dl.git || true

          # Fetch and merge remote changes with unrelated histories allowed
          git fetch aur master
          git merge aur/master --allow-unrelated-histories --no-edit

          # Commit local changes
          git add PKGBUILD .SRCINFO
          git commit -m "Update to version ${{ env.release_tag }}" || echo "No changes to commit"

          # Push to master
          git push aur master


